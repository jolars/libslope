#pragma once

#include "jlcxx/jlcxx.hpp"

void
fit_slope_dense(jlcxx::ArrayRef<double, 2> x_in,
                jlcxx::ArrayRef<double, 1> y_in,
                jlcxx::ArrayRef<double, 1> alpha_in,
                jlcxx::ArrayRef<double, 1> lambda_in,
                std::int64_t n,
                std::int64_t p,
                std::int64_t m,
                bool fit_intercept,
                std::string loss_type,
                std::string centering_type,
                std::string scaling_type,
                std::size_t path_length,
                double tol,
                std::int64_t max_it,
                double q,
                std::int64_t max_clusters,
                double dev_change_tol,
                double dev_ratio_tol,
                double alpha_min_ratio,
                jlcxx::ArrayRef<double, 1> coef_vals_out,
                jlcxx::ArrayRef<std::int64_t, 1> coef_rows_out,
                jlcxx::ArrayRef<std::int64_t, 1> coef_cols_out,
                jlcxx::ArrayRef<double, 1> intercepts_out,
                jlcxx::ArrayRef<std::int64_t, 1> nnz_out,
                jlcxx::ArrayRef<double, 1> alpha_out,
                jlcxx::ArrayRef<double, 1> lambda_out);

void
fit_slope_sparse(jlcxx::ArrayRef<std::int64_t, 1> x_colptr,
                 jlcxx::ArrayRef<std::int64_t, 1> x_rowval,
                 jlcxx::ArrayRef<double, 1> x_vals,
                 jlcxx::ArrayRef<double, 1> y_in,
                 jlcxx::ArrayRef<double, 1> alpha_in,
                 jlcxx::ArrayRef<double, 1> lambda_in,
                 std::int64_t n,
                 std::int64_t p,
                 std::int64_t m,
                 bool fit_intercept,
                 std::string loss_type,
                 std::string centering_type,
                 std::string scaling_type,
                 std::int64_t path_length,
                 double tol,
                 std::int64_t max_it,
                 double q,
                 std::int64_t max_clusters,
                 double dev_change_tol,
                 double dev_ratio_tol,
                 double alpha_min_ratio,
                 jlcxx::ArrayRef<double, 1> coef_vals_out,
                 jlcxx::ArrayRef<std::int64_t, 1> coef_rows_out,
                 jlcxx::ArrayRef<std::int64_t, 1> coef_cols_out,
                 jlcxx::ArrayRef<double, 1> intercepts_out,
                 jlcxx::ArrayRef<std::int64_t, 1> nnz_out,
                 jlcxx::ArrayRef<double, 1> alpha_out,
                 jlcxx::ArrayRef<double, 1> lambda_out);
